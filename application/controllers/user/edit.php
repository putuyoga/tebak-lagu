<?php if ( ! defined('BASEPATH')) exit('No direct script access allowed');class Edit extends BASE_Controller {		public function __construct()	{		parent::__construct();						$this->load->library('user');				//kalau belum login, alihkan		if($this->user->get_current_user() === NULL)		{			redirect('user/login');		}				$this->load->model('user_model');	}		public function index()	{		$this->set_judul('Edit');		$data_view = $this->user->get_current_user();		$form = $this->load->view('frontend/user/edit', $data_view, TRUE);				$this->tampil($form);	}		private function cek_input($data, $data_sblm)	{		$array_error = array();		$this->load->helper('email');				//cek email		if(trim($data['email']) === '')		{			$array_error[] = 'Email harus diisi';		}		elseif(valid_email($data['email']) === FALSE)		{			$array_error[] = 'Email tidak valid';		}		elseif($this->user_model->exists($data['email'], 'email') === TRUE			&& $data['email'] !== $data_sblm['email'])		{			$array_error[] = 'Email sudah ada';		}				//cek password		if($data['password'] !== $data['re_password'] && trim($data['password']) !== '')		{			$array_error[] = 'Password yang diketikkan tidak sama';		}				if( ! empty($array_error))		{			return $array_error;		}		else		{			return TRUE;		}	}		public function ajax()	{		$data = $this->input->post();		$current_user = $this->user->get_current_user();				$cek = $this->cek_input($data, $current_user);				//kalau udah benar		if($cek !== TRUE)		{			echo json_encode(array('error' => implode($cek, ', ')));			exit;		}				if($current_user !== NULL && $data !== FALSE)		{			$data['id'] = $current_user['id'];			//update profil!			$this->user_model->edit_profil($data['id'], $data['email'], $data['password']);			echo json_encode(array('sukses' => true));		}		else		{			//error			echo json_encode(array('error' => 'Anda belum login / tidak ada input.'));		}	}	}